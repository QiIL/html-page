const squareData = {
    1: { // 长条
        data: [
            [0, 2, 0, 0],
            [0, 2, 0, 0],
            [0, 2, 0, 0],
            [0, 2, 0, 0]
        ],
        rotates: [
            [
                [0, 2, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [2, 2, 2, 2],
                [0, 0, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 2, 0],
                [0, 0, 2, 0],
                [0, 0, 2, 0],
                [0, 0, 2, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [2, 2, 2, 2],
                [0, 0, 0, 0]
            ]
        ]
    },
    2: { // 镜像长条
        data: [
            [0, 0, 2, 0],
            [0, 0, 2, 0],
            [0, 0, 2, 0],
            [0, 0, 2, 0]
        ],
        rotates: [
            [
                [0, 0, 2, 0],
                [0, 0, 2, 0],
                [0, 0, 2, 0],
                [0, 0, 2, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [2, 2, 2, 2],
                [0, 0, 0, 0]
            ],
            [
                [0, 2, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [2, 2, 2, 2],
                [0, 0, 0, 0],
                [0, 0, 0, 0]
            ]
        ]
    },
    3: { // 三角
        data: [
            [0, 0, 0, 0],
            [0, 2, 0, 0],
            [2, 2, 2, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 0, 0, 0],
                [0, 2, 0, 0],
                [2, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [2, 2, 2, 0],
                [0, 2, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 0, 0],
                [2, 2, 0, 0],
                [0, 2, 0, 0]
            ]
        ]
    },
    4: { // 镜像三角
        data: [
            [0, 0, 0, 0],
            [2, 2, 2, 0],
            [0, 2, 0, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 0, 0, 0],
                [2, 2, 2, 0],
                [0, 2, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 2, 0, 0],
                [2, 2, 0, 0],
                [0, 2, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 2, 0, 0],
                [2, 2, 2, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 2, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 0, 0],
                [0, 0, 0, 0]
            ]
        ]
    },
    5: { // 正方形
        data: [
            [0, 0, 0, 0],
            [0, 2, 2, 0],
            [0, 2, 2, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ]
        ]
    },
    6: { // 镜像正方形，影响概率
        data: [
            [0, 0, 0, 0],
            [0, 2, 2, 0],
            [0, 2, 2, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ]
        ]
    },
    7: { // Z字型
        data: [
            [0, 0, 0, 0],
            [2, 2, 0, 0],
            [0, 2, 2, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 0, 0, 0],
                [2, 2, 0, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 0, 2, 0],
                [0, 2, 2, 0],
                [0, 2, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [2, 2, 0, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 0, 2, 0],
                [0, 2, 2, 0],
                [0, 2, 0, 0]
            ]
        ]
    },
    8: { // 镜像Z字型
        data: [
            [0, 0, 0, 0],
            [0, 2, 2, 0],
            [2, 2, 0, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [2, 2, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 2, 0],
                [0, 0, 2, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 2, 0],
                [2, 2, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 2, 0],
                [0, 0, 2, 0]
            ]
        ]
    },
    9: { // 7字型
        data: [
            [0, 2, 0, 0],
            [0, 2, 0, 0],
            [0, 2, 2, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 2, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [2, 2, 2, 0],
                [2, 0, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 2, 2, 0],
                [0, 0, 2, 0],
                [0, 0, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 0, 2, 0],
                [2, 2, 2, 0],
                [0, 0, 0, 0]
            ]
        ]
    },
    10: { // 镜像7字型
        data: [
            [0, 0, 2, 0],
            [0, 0, 2, 0],
            [0, 2, 2, 0],
            [0, 0, 0, 0]
        ],
        rotates: [
            [
                [0, 0, 2, 0],
                [0, 0, 2, 0],
                [0, 2, 2, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 2, 2, 2],
                [0, 0, 0, 0]
            ],
            [
                [0, 2, 2, 0],
                [0, 2, 0, 0],
                [0, 2, 0, 0],
                [0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0],
                [0, 0, 0, 2],
                [0, 2, 2, 2],
                [0, 0, 0, 0]
            ]
        ]
    },
}

class SquareFactory {
    static makeSquare(index, rotatePos) {
        let data
        let rotates
        let origin = {x:0, y:3}
        let realRotatePos
        if (index > 0 && index < 11) {
            data = squareData[index].data
            rotates = squareData[index].rotates
        } else {
            let RealIndex = Math.floor(Math.random() * 10) + 1
            data = squareData[RealIndex].data
            rotates = squareData[RealIndex].rotates
        }
        if (rotatePos !== 0) {
            realRotatePos = rotatePos
        } else {
            realRotatePos = Math.floor(Math.random() * 4)
        }
        return new Square(data, rotates, origin, realRotatePos)
    }
}
